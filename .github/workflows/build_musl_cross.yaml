name: Build musl toolchain

on:
  push:
    paths:
      - ".github/workflows/build_musl_cross.yaml"
  workflow_dispatch:

jobs:
  Build:
    permissions:
      contents: write
      actions: write
    name: Build ${{matrix.target}}-${{matrix.host}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        host:
          # - x86_64-linux-musl
          - aarch64-linux-musl
        target:
          # - x86_64-linux-musl
          - aarch64-linux-musl

    steps:
      - name: Clone musl-cross-make
        run: git clone https://github.com/DanielMYT/musl-cross-make

      - name: Patch source
        working-directory: musl-cross-make
        run: |
          ## Tar no verbose
          cat Makefile | sed 's/tar zxvf/tar zxf/' | sed 's/tar jxvf/tar jxf/' | sed 's/tar Jxvf/tar Jxf/' > Makefile_tmp
          mv Makefile_tmp Makefile

      - name: Write config.mak
        working-directory: musl-cross-make
        run: |
          cat<<'EOF'>config.mak
          BINUTILS_VER = 2.41
          GCC_VER = 13.2.0
          MUSL_VER = 1.2.4
          GMP_VER = 6.3.0
          MPC_VER = 1.3.1
          MPFR_VER = 4.2.1
          ISL_VER = 0.26
          LINUX_VER = 6.6.2

          STAT = -static --static
          FLAG = -g0 -O2 -fno-align-functions -fno-align-jumps -fno-align-loops -fno-align-labels -Wno-error

          ifneq ($(NATIVE),)
          COMMON_CONFIG += CC="$(HOST)-gcc ${STAT}" CXX="$(HOST)-g++ ${STAT}" FC="$(HOST)-gfortran ${STAT}"
          else
          COMMON_CONFIG += CC="gcc ${STAT}" CXX="g++ ${STAT}" FC="gfortran ${STAT}"
          endif

          COMMON_CONFIG += CFLAGS="${FLAG}" CXXFLAGS="${FLAG}" FFLAGS="${FLAG}" LDFLAGS="-s ${STAT}"

          BINUTILS_CONFIG += --enable-gold=yes
          GCC_CONFIG += --enable-default-pie --enable-static-pie --disable-cet


          DL_CMD = curl -C - -Ls -o

          STAT = -static --static
          FLAG = -g0 -O2 -fno-align-functions -fno-align-jumps -fno-align-loops -fno-align-labels -Wno-error

          ifneq ($(NATIVE),)
          COMMON_CONFIG += CC="$(HOST)-gcc ${STAT}" CXX="$(HOST)-g++ ${STAT}" FC="$(HOST)-gfortran ${STAT}"
          else
          COMMON_CONFIG += CC="gcc ${STAT}" CXX="g++ ${STAT}" FC="gfortran ${STAT}"
          endif

          COMMON_CONFIG += CFLAGS="${FLAG}" CXXFLAGS="${FLAG}" FFLAGS="${FLAG}" LDFLAGS="-s ${STAT}"

          BINUTILS_CONFIG += --enable-gold=yes
          GCC_CONFIG += --enable-default-pie --enable-static-pie --disable-cet


          STAT = -static --static
          COMMON_CONFIG += CFLAGS="-g0 -Os \${STAT}" CXXFLAGS="-g0 -Os \${STAT}" FFLAGS="\${STAT}" LDFLAGS="-w -s \${STAT}"
          BINUTILS_CONFIG += --disable-gprofng
          EOF

      - name: Build host toolchain ${{matrix.host}}
        working-directory: musl-cross-make
        run: |
          ## build via command, no make then install, no relative output path
          make_fail_retry(){
            make install TARGET=${{matrix.host}} OUTPUT=${PWD}/host-toolchain -j$(nproc)
          }
          make_fail_retry || make_fail_retry || make_fail_retry

      - name: Checkout host toolchain
        working-directory: musl-cross-make
        run: |
          ls -a1
          file host-toolchain/bin/*

      - name: Build target toolchain ${{matrix.target}}
        working-directory: musl-cross-make
        run: |
          sudo apt install qemu-user-static binfmt-support

          export PATH=${PWD}/host-toolchain/bin:$PATH
          HOST=${{matrix.host}}
          TARGET=${{matrix.target}}
          CC=${HOST}-gcc
          CXX=${HOST}-g++

          if test "${HOST}x" = "${TARGET}x"; then
            OUTPUT="${PWD}/${HOST}"
          else
            OUTPUT="${PWD}/${TARGET}-${HOST}"
          fi
          echo OUTPUT=${OUTPUT} >> ${GITHUB_ENV}
          echo OUTPUT_DIRNAME=$(dirname ${OUTPUT}) >> ${GITHUB_ENV}

          make clean
          make install \
            HOST=${HOST} \
            TARGET=${TARGET} \
            OUTPUT="${OUTPUT}" \
            -j$(nproc)

      - name: Checkout target toolchain
        working-directory: musl-cross-make
        run: |
          ls -a1
          file ${{env.OUTPUT_DIRNAME}}/bin/*

      - name: Compress ${{env.OUTPUT_DIRNAME}}
        working-directory: musl-cross-make
        run: |
          tar -c ${{env.OUTPUT_DIRNAME}} | xz -T0 > ${{env.OUTPUT_DIRNAME}}.tar.xz

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.OUTPUT_DIRNAME}}.tar.xz
          path: ${{env.OUTPUT_DIRNAME}}.tar.xz

      - name: Upload release
        uses: ncipollo/release-action@v1.13.0
        with:
          tag: "v1.0.0"
          artifacts: |
            ${{env.OUTPUT_DIRNAME}}.tar.xz
          allowUpdates: true
          replacesArtifacts: true
          body: |
            * BINUTILS_VER = 2.41
            * GCC_VER = 13.2.0
            * MUSL_VER = 1.2.4
            * GMP_VER = 6.3.0
            * MPC_VER = 1.3.1
            * MPFR_VER = 4.2.1
            * ISL_VER = 0.26
            * LINUX_VER = 6.6.2

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2.0.6
        with:
          delete_workflow_pattern: "build_musl_cross.yaml"

      - name: Get date
        run: |
          echo DATE=$(date +"%Y-%m-%d %H:%M:%S") >> $GITHUB_ENV

      - name: Upload release
        uses: ncipollo/release-action@v1.13.0
        with:
          tag: "v1.0.0"
          artifacts: |
            /etc/os-release
            /etc/resolv.conf
          allowUpdates: true
          replacesArtifacts: true
          body: |
            ${{ env.DATE }}
            ${{ github.event.head_commit.message }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2.0.6
        with:
          delete_workflow_pattern: "build_musl_cross.yaml"
          retain_days: 0
          keep_minimum_runs: 1
